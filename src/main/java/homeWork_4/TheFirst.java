package homeWork_4;

public class TheFirst {
//    ДЗ №4
//    Частина 1.
/*            - У класі WorkWithMassive створити метод який буде створювати матрицю (тип int) та заповнювати її заданим
/            значенням (розмірність матриці та значення передаємо з основної програми, наприклад за розміром NхN (наприклад 3х3)
/            та заповнювати її заданим значенням, наприклад 8.). Після заповнення повертати її.
              DONE
 */
//            - Також у цьому класі створити метод fillingOfLeftDiagonal - метод повинен приймати на вхід матрицю і значення для заповнення.
//            Перевіряти чи квадратна вона. Якщо так, то заповнювати діагональ переданим значенням та повертати матрицю.
//            Якщо не квадратна - виводити повідомлення "Матриця не квадратна" та повертати незмінену матрицю
//-         Також у цьому класі створити метод fillingOfRightDiagonal - аналогічно fillingOfLeftDiagonal але заповнювати праву діагональ
//-         Створити метод із заповнення значеннями відразу двох діагоналей переданим значенням

/*- Метод виведення матриці в консоль у "гарному вигляді" - рядки - значення через пробіл,
// а кожен рядок з нового рядка (ми вже створили його на занятті, просто перенести його в клас по роботі з масивом). Наприклад
    DONE
 */
//        1 1 1
//        1 1 1
//        1 1 1
//
//        8 1 1 - ліва діагональ
//        1 8 1
//        1 1 8
//
//        8 1 9 - права діагональ
//        1 9 1
//        9 1 8
//
//    Part 2. Створити змінну “ Test_String ” і з нею зробити події.
//1.    Прибрати прогалини на початку та в кінці стрінги
//2.    З вказаної стрінги залишити лише слово Test
//3.    Зробити перевірку – якщо перший Не порожній символ рядка 't' або 'T' вивести повідомлення «Перший символ - «Т»» якщо ні – нічого не робити.
//4.    Знайти першу букву 's' та замінити її на 'y'
//      Це тренування по роботі зі стрінгами, тому робити його можна прямо в мейні. Кожен пункт - це окрема нова дія з вихідною стрінгою.
//
//    На перевірку можна надсилати окремо Part2 і Part1 (тільки вказуйте це у темі листа).
//    Домашка з Масивами (Part1) об'ємна за часом виконання. Не відкладайте її і постарайтеся виділити якнайбільше часу.
//    Вже можна починати над нею думати і робити.



//    По матриці з діагоналлю:
//                  1. Виведення повинно будти в окремому методі і в методах по заповненню
//                  діагоналей просто викликаєм даний метод, замість System.out.print
//                  DONE

//                  2. При заповненні двох діагоналей  int[][] newTempArray = array; - зайве.
//                  DONE

//                  3. При заповненні двох діагоналей - в кодному методі є перевірка на
//                  квадратність, тож можна не робити додаткову перевірку
//                  DONE

//                  4. filInRightDiagonal досить одного загального return
//                  DONE

//5. в fillIn2DArray невистачає виводу матриці в консоль. І не вистачає
//    обробки різних бивних значень розмірів..
//    Поправ і висилай ще
//


//    1. fillIn2DArray - в цьому методі невистачає виводу в консоль
//      DONE

//    2. В методі isMatrixSquare перевірка по першому рядку, а потрібно по
//    всім рядкам пройтися
//      DONE

//--    3. fillInTwoDiagonal -  у нас в кожному методі є перевірка на
//--    квадратність, тож окремо це веревіряти не треба

//    4. is2DArrayCorrect -  що робить цей метод? він перевіряє чи сторони
//    матриці більше нуля? але такої вимоги не було.. Була вимога зробити
//    перевірку в методі створення, перед створенням.
//      - І.  якщо сторона 0 то замінити її на 1, в
//      - II. якщо від'ємна, то замінити на позитивну (-5 замінити на 5).
//     І вже потім створити матрицю з відповідними значеннями

    //=======================================================

//    ДЗ №5
//          1. Написати метод пошуку максимального значення в листі. Лист Integer.
//          Метод повинен знайти значення, вивести його в консоль і повернути в основну програму.
//          В першому методі - повертайте нуль, якщо переданий лист пустий.
//          DONE

//          2. Написати метод reverse для листа. Метод повинен виводити в консоль лист і повертати його в основну програму.
//          Наприклад 1,4,3,6 повинен повернути 6,3,4,1
//          DONE

    //========================================================

//    ДЗ№6
//    Створити валюту Bitcoin: у неї Не повинно бути властивості
//      - вільноконвертована,
//      - повинна бути властивість CryptoCurrency (метод  сryptoCurrency повинен повертати true),
//    а також при спробі обміну грн на біткоїн  - замість суми в біткоїнах ми повинні :
//      - отримати повідомлення "Операція заборонена нацбанком" і повернути назад передану суму в грн
}
